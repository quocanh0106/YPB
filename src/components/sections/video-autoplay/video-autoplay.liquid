{%- liquid
  assign video_id = section.settings.video.id | default: section.settings.video_url.id
  assign video_alt = section.settings.video.alt | default: section.settings.description
  assign alt = 'sections.video.load_video' | t: description: video_alt | escape
  assign poster = section.settings.video.preview_image | default: section.settings.cover_image

  if section.settings.video != null
    assign ratio_diff = section.settings.video.aspect_ratio | minus: poster.aspect_ratio | abs
    if ratio_diff < 0.01 and ratio_diff > 0
      assign fix_ratio = true
    endif
  endif
-%}

{%- capture sizes -%}
  {% if section.settings.full_width -%}
    100vw
  {%- else -%}
    (min-width: {{ settings.page_width }}px) {{ settings.page_width | minus: 100 }}px, (min-width: 750px)
    calc(100vw - 10rem), 100vw
  {%- endif %}
{%- endcapture -%}

<div class="video-{{ section.settings.color_scheme }} leading-none w-full{% if section.settings.border_bottom %} border-b border-primary{% endif %}">
  {{ section.settings.video | video_tag: image_size: '1920x', autoplay: true, loop: true, muted: true, class: 'w-full block'}}
</div>
<script defer>
  document.addEventListener("DOMContentLoaded", function(){
    var video = document.querySelector('.video-{{ section.settings.color_scheme }} video');
    if(!video.playing) {
      video.play();
    }
  });
</script>
{% schema %}
{
  "name": "Video autoplay",
  "settings": [
    {
      "type": "checkbox",
      "id": "border_bottom",
      "label": "Show border bottom",
      "default": true
    },
    {
      "type": "video",
      "id": "video",
      "label": "Video"
    }
  ],
  "presets": [
    {
      "name": "Video autoplay"
    }
  ]
}
{% endschema %}
